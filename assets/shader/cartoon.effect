// Copyright (c) 2017-2020 Xiamen Yaji Software Co., Ltd.
CCEffect %{
  techniques:
  - name: opaque
    passes:
    - switch: USE_OUTLINE_PASS
      vert: outline-vs:vert
      frag: outline-fs:frag
      rasterizerState:
        cullMode: front
      # depthStencilState:
      #   depthTest: true
      #   depthWrite: false
      properties:
        outLine:        { value: 0.01, target: outLineParam.x }
        outLineColor:   { value: [0, 0, 0, 1], editor: { type: color }}
    - vert: cartoon-vs:vert
      frag: cartoon-fs:frag
      properties:
        mainTexture:    { value: white }
        tilingOffset:   { value: [1, 1, 0, 0] }
        mainColor:      { value: [1, 1, 1, 1], editor: { type: color } }
        specColor:      { value: [1, 1, 1, 1], editor: { type: color, parent: USE_SPECULAR } }
        specThreshold:  { value: 0.99, target: colorScaleAndCutoff.x, editor: { parent: USE_SPECULAR, slide: true, range: [0.5, 1.0], step: 0.001 }}
        alphaThreshold: { value: 0.5, target: colorScaleAndCutoff.w, editor: { parent: USE_ALPHA_TEST } }
}%

CCProgram outline-vs %{
  #include <chunk/outline-vs>
}%

CCProgram outline-fs %{
  #include <chunk/outline-fs>
}%

CCProgram cartoon-vs %{
  #include <chunk/cartoon-vs>
}%

CCProgram cartoon-fs %{
  #include <chunk/cartoon-fs>

  vec4 frag () {
    CarToonSurface s;
    surf(s);
    vec3 color = s.color;

    // 球面光
    #if USE_SPHERELIT0
      vec3 lightPos = cc_custom1.xyz;
      vec4 lightColor = cc_custom2;
      vec3 dir = lightPos - v_worldPos;
      float disSqr = dot(dir, dir);
      float lightRange = cc_custom1.w;
      float startSqr = 0.0;
      float atten = 1.0 - smoothstep(startSqr, lightRange * lightRange, disSqr);
      color.rgb += (lightColor.rgb * s.albedo * atten);
    #endif

    vec4 o = vec4(color, 1.0);
    
    CC_APPLY_FOG(o);
    return o;
  }
}%
