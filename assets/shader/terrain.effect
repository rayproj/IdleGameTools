// Copyright (c) 2017-2020 Xiamen Yaji Software Co., Ltd.
CCEffect %{
  techniques:
  - name: opaque
    passes:
    - vert: terrain-vs:terVert
      frag: terrain-fs:frag
      properties:
        mainTexture:    { value: white }
        minorTexture:   { value: white }
        detailTexture:  { value: white }
        tilingOffset:   { value: [1, 1, 0, 0] }
        mainColor:      { value: [1, 1, 1, 1], editor: { type: color } }
        colorScale:     { value: [1, 1, 1], target: colorScaleAndCutoff.xyz }
        specColor:      { value: [1, 1, 1, 1], editor: { type: color, parent: USE_SPECULAR } }
        specThreshold:  { value: 0.99, target: specParams.x, editor: { parent: USE_SPECULAR, slide: true, range: [0.5, 1.0], step: 0.001 }}
        alphaThreshold: { value: 0.5, target: colorScaleAndCutoff.w, editor: { parent: USE_ALPHA_TEST } }
}%

CCProgram terrain-vs %{
  #include <chunk/cartoon-vs>

  out vec2 v_InUv;

  vec4 terVert () {
    v_InUv = a_texCoord;
    return vert();
  }
}%

CCProgram terrain-fs %{
  #include <chunk/cartoon-fs>

  in vec2 v_InUv;
  uniform sampler2D minorTexture;
  uniform sampler2D detailTexture;

  vec4 frag () {
    CarToonSurface s;
    surf(s);
    vec3 color = s.color;

    // 细节
    vec3 minorColor = texture(minorTexture, v_uv).rgb;
    vec2 uvRemap = v_InUv * 0.3 + 0.2;
    vec4 detail = texture(detailTexture, uvRemap);
    minorColor.rgb *= (1.0 - detail.x);
    vec3 deatilColor = (detail.x + detail.z) * minorColor.rgb * 0.1;
    deatilColor.rgb = cc_ambientSky.xyz * deatilColor + cc_mainLitColor.rgb * deatilColor;
    color.rgb += deatilColor;

    // 球面光
    #if USE_SPHERELIT0
      vec3 lightPos = cc_custom1.xyz;
      vec4 lightColor = cc_custom2;
      vec3 dir = lightPos - v_worldPos;
      float disSqr = dot(dir, dir);
      float lightRange = cc_custom1.w;
      float startSqr = 0.0;
      float atten = 1.0 - smoothstep(startSqr, lightRange * lightRange, disSqr);
      color.rgb += (lightColor.rgb * s.albedo * atten);
    #endif

    vec4 o = vec4(color, 1.0);
    // o.rgb *= getShadow(v_worldPos, v_worldNormal);
    
    CC_APPLY_FOG(o);
    return o;
  }
}%
